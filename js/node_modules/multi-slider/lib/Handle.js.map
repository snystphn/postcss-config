{"version":3,"sources":["../src/Handle.js"],"names":["Handle","state","hover","hoverIn","setState","hoverOut","props","active","x","y","size","strokeWidth","innerRadius","bg","color","events","onMouseEnter","onMouseLeave","style","cursor","WebkitTapHighlightColor","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,M;;;;;;;;;;;;;;sLACnBC,K,GAAQ;AACNC,aAAO;AADD,K,QAIRC,O,GAAU;AAAA,aACR,MAAKC,QAAL,CAAc;AACZF,eAAO;AADK,OAAd,CADQ;AAAA,K,QAKVG,Q,GAAW;AAAA,aACT,MAAKD,QAAL,CAAc;AACZF,eAAO;AADK,OAAd,CADS;AAAA,K;;;;;6BAKF;AACP,UAAID,QAAQ,KAAKA,KAAjB;AACA,UAAIC,QAAQD,MAAMC,KAAlB;AACA,UAAII,QAAQ,KAAKA,KAAjB;AACA,UAAIC,SAASD,MAAMC,MAAnB;AACA,UAAIC,IAAIF,MAAME,CAAd;AACA,UAAIC,IAAIH,MAAMG,CAAd;AACA,UAAIC,OAAOJ,MAAMI,IAAjB;AACA,UAAIC,cAAcL,MAAMK,WAAxB;AACA,UAAIC,cAAcN,MAAMM,WAAxB;AACA,UAAIC,KAAKP,MAAMO,EAAf;AACA,UAAIC,QAAQR,MAAMQ,KAAlB;AACA,UAAIC,SAAS,4BACX,8BACI,EADJ,GAEI;AACEC,sBAAc,KAAKb,OADrB;AAEEc,sBAAc,KAAKZ;AAFrB,OAHO,EAOXC,MAAMS,MAPK,CAAb;AASA,UAAIG,QAAQ;AACVC,gBAAQZ,SAAS,WAAT,GAAuB,SADrB;AAEVa,iCAAyB;AAFf,OAAZ;;AAKA,aACE;AAAA;AAAA,mBAAG,OAAOF,KAAV,IAAqBH,MAArB;AACE,kDAAQ,KAAI,GAAZ,EAAgB,IAAIP,CAApB,EAAuB,IAAIC,CAA3B,EAA8B,GAAGC,IAAjC,EAAuC,MAAMI,KAA7C,GADF;AAEE;AACE,eAAI,GADN;AAEE,mBAASP,SAAS,CAAT,GAAaL,QAAQ,GAAR,GAAc,CAFtC;AAGE,cAAIM,CAHN;AAIE,cAAIC,CAJN;AAKE,aAAGC,OAAOC,WALZ;AAME,gBAAME;AANR,UAFF;AAUE;AACE,eAAI,GADN;AAEE,cAAIL,CAFN;AAGE,cAAIC,CAHN;AAIE,aAAGG,WAJL;AAKE,gBAAML,SAASM,EAAT,GAAcC;AALtB;AAVF,OADF;AAoBD;;;;EA7DiC,gBAAMO,S;;kBAArBrB,M","file":"Handle.js","sourcesContent":["import React from \"react\";\nimport objectAssign from \"object-assign\";\nimport useTouches from \"./useTouches\";\n\nexport default class Handle extends React.Component {\n  state = {\n    hover: false,\n  };\n\n  hoverIn = () =>\n    this.setState({\n      hover: true,\n    });\n\n  hoverOut = () =>\n    this.setState({\n      hover: false,\n    });\n\n  render() {\n    var state = this.state;\n    var hover = state.hover;\n    var props = this.props;\n    var active = props.active;\n    var x = props.x;\n    var y = props.y;\n    var size = props.size;\n    var strokeWidth = props.strokeWidth;\n    var innerRadius = props.innerRadius;\n    var bg = props.bg;\n    var color = props.color;\n    var events = objectAssign(\n      useTouches()\n        ? {}\n        : {\n            onMouseEnter: this.hoverIn,\n            onMouseLeave: this.hoverOut,\n          },\n      props.events\n    );\n    var style = {\n      cursor: active ? \"ew-resize\" : \"pointer\",\n      WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    };\n\n    return (\n      <g style={style} {...events}>\n        <circle key=\"1\" cx={x} cy={y} r={size} fill={color} />\n        <circle\n          key=\"2\"\n          opacity={active ? 0 : hover ? 0.8 : 1}\n          cx={x}\n          cy={y}\n          r={size - strokeWidth}\n          fill={bg}\n        />\n        <circle\n          key=\"3\"\n          cx={x}\n          cy={y}\n          r={innerRadius}\n          fill={active ? bg : color}\n        />\n      </g>\n    );\n  }\n}\n"]}